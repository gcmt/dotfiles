#!/bin/bash

state_file="/run/user/$UID/fnmux"
profiles=(default mpv)

_notify() {
	dunstify -t 3000 -r 4234 "Fnmux" "$1"
}

_err() {
	echo 1>&2 "error: $*"
}

_next_profile() {
	local offset current="$2"
	[[ "$1" == "-next" ]] && offset=1 || offset=-1
	for i in "${!profiles[@]}"; do
		if [[ "${profiles[$i]}" == "$current" ]]; then
			echo "${profiles[$(( (i+offset) % ${#profiles[@]} ))]}"
			break
		fi
	done
}

_mpv() {
	local fifo="/tmp/mpv.fifo"
	if ! pgrep -x mpv >/dev/null; then
		_err "mpv not running"
		_notify "Mpv not running"
		return 1
	fi
	echo "$@" > "$fifo"
}

_mpv_profile() {
	case "$1" in
		mod+F5) _mpv stop ;;
		mod+F6) _mpv cycle pause ;;
		mod+F7) _mpv seek -3 ;;
		mod+F8) _mpv seek 3 ;;
		*) return 1 ;;
	esac
	return 0
}

_default_profile() {
	case "$1" in
		mod+F1) capture -window root ;;
		mod+Shift+F1) capture -wait -window root ;;
		mod+F2) capture ;;
		mod+F3) exec rec -root ;;
		mod+F4) exec rec ;;
		mod+F5) exec i3-focus -c URxvt -t '^Cmus$' -kill -fallback 'urxvt -name floating -title Cmus -e cmus-tmux' ;;
		mod+F6) cmus-remote --pause ;;
		mod+F7) cmus-remote --prev ;;
		mod+F8) cmus-remote --next ;;
		mod+F10) volume toggle ;;
		mod+F11) volume down ;;
		mod+F12) volume up ;;
		*) exit 1 ;;
	esac
}

if [[ -f "$state_file" ]]; then
	profile="$(cat "$state_file")"
else
	profile="${profiles[0]}"
	echo "$profile" > "$state_file"
fi

if [[ "$1" =~ ^(-next|-prev)$ ]]; then
	profile="$(_next_profile "$1" "$profile")"
	echo "$profile" > "$state_file"
	echo "active profile: $profile"
	_notify "Profile:  $profile"
	exit
fi

case "$profile" in
	default) _default_profile "$1" ;;
	mpv) _mpv_profile "$1" || _default_profile "$1" ;;
	*) _err "unknow profile: $1" && exit 1 ;;
esac
