#!/usr/bin/env python

import os
import sys
import i3ipc
from subprocess import Popen, PIPE


CW_NORM = 8  # character width in px for mono fonts size 10
CW_BOLD = 9  # character width in px for bold mono fonts size 10


# Try to estimate the correct width of a string in pixels.
# Since the listview does not adapt to its content when elements are stacked
# horizontally, we need to manually estimate the correct window width.
def pixels(s, bold=False):
    px = CW_BOLD if bold else CW_NORM
    return len(s) * px


def rofi(workspaces, current):

    width = 1
    lines = []
    selected = 0
    hpadding = 40
    vpadding = 20

    for i, w in enumerate(workspaces):
        width += hpadding * 2 + pixels(w.name, w.num == current.num)
        selected = i if w.num == current.num else selected
        line = f"<b>{w.name}</b>" if w.num == current.num else w.name
        lines.append(line)

    style  = ['-theme', 'main-light', '-width', str(width)]
    style += ['-theme-str', 'window { children: [ listview ]; }']
    style += ['-theme-str', 'listview { layout: horizontal; }']
    style += ['-theme-str', f'element {{ font: "Noto Mono 10"; padding: {vpadding} {hpadding}; }}']

    options  = ['-dmenu', '-format', 'i', '-no-custom']
    options += ['-markup-rows', '-selected-row', str(selected)]
    options += ['-kb-row-up', 'h', '-kb-row-down', 'l,m,Super+m']
    options += ['-kb-accept-entry', 'j,k,Down,Up,Return', '-kb-cancel', 'Escape,q']

    proc = Popen(['rofi'] + options + style, stdin=PIPE, stdout=PIPE)
    out = proc.communicate("\n".join(lines).encode())[0].decode()

    return out.strip(), proc.returncode


def main():

    i3 = i3ipc.Connection()
    tree = i3.get_tree()

    workspaces = tree.workspaces()
    if len(workspaces) <= 1:
        sys.exit(0)

    current = tree.find_focused().workspace()
    choice, _ = rofi(workspaces, current)
    if not choice:
        sys.exit(0)

    target = workspaces[int(choice)].num
    i3.command(f'workspace number {target}')


if __name__ == '__main__':
    main()
