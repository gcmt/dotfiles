#!/usr/bin/env python

import i3ipc
import argparse


def main():

    parser = argparse.ArgumentParser(description="Improved i3 window cycling")
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-next', action='store_true', default=False, help="focus next window")
    group.add_argument('-prev', action='store_true', default=False, help="focus previous window")
    args = parser.parse_args()

    i3 = i3ipc.Connection()
    tree = i3.get_tree()
    focused = tree.find_focused()
    windows = focused.workspace().leaves()
    ids = [win.id for win in windows]
    offset = +1 if args.next else -1
    next = windows[(ids.index(focused.id) + offset) % len(ids)]
    next.command('focus')


if __name__ == '__main__':
    main()
