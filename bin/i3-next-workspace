#!/usr/bin/env python

import i3pie
import argparse


def parse_args():
    parser = argparse.ArgumentParser(
        description="Cycle i3 workspaces (ignore workspaces starting with an underscore)"
    )
    parser.add_argument(
        "-dry", action="store_true", help="just print workspace without moving"
    )
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument("-next", action="store_true", help="focus next workspace")
    group.add_argument("-prev", action="store_true", help="focus previous workspace")
    return parser.parse_args()


def main(i3):

    args = parse_args()
    tree = i3.get_tree()
    workspaces = list(tree.workspaces())
    current = tree.current_workspace()

    active_idx = 0
    for i, workspace in enumerate(workspaces):
        if workspace is current:
            active_idx = i
            break

    offset = 1 if args.next else -1
    i = active_idx + offset
    while i % len(workspaces) != active_idx:
        w = workspaces[i % len(workspaces)]
        if not w.name.startswith("_"):
            if args.dry:
                print(w.name)
            else:
                i3.command(f'workspace "{w.name}"')
            return
        i += offset


if __name__ == "__main__":
    with i3pie.Connection() as i3:
        main(i3)
