#!/usr/bin/env python

import i3pie
import argparse


def parse_args():

    parser = argparse.ArgumentParser(description="i3 window rotation")
    parser.add_argument('-follow', action='store_true', help="follow current window")
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-next', action='store_true', help="focus next window")
    group.add_argument('-prev', action='store_true', help="focus previous window")

    return parser.parse_args()


def main(i3):

    args = parse_args()

    tree = i3.get_tree()
    focused = tree.focused_window()
    workspace = tree.current_workspace()

    ids = [w.id for w in reversed(list(workspace.windows()))]
    curpos = ids.index(focused.id)

    rotated = list(ids)
    if args.next:
        rotated.insert(0, rotated.pop())
    else:
        rotated.append(rotated.pop(0))

    for i in range(len(ids)):
        if ids[i] == rotated[i]:
            continue
        i3.command(f'[con_id="{ids[i]}"] swap container with con_id {rotated[i]}')
        k = ids.index(rotated[i])
        ids[i], ids[k] = ids[k], ids[i]

    if not args.follow:
        i3.command(f'[con_id="{rotated[curpos]}"] focus')


if __name__ == '__main__':
    with i3pie.Connection() as i3:
        main(i3)
