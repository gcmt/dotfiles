#!/usr/bin/env python

import sys
import i3pie
import argparse


def parse_args():
    parser = argparse.ArgumentParser(description="Custom i3 scratchpad")
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-push', action='store_true', help="Push the current window to the scratchpad")
    group.add_argument('-pop', action='store_true', help="Pop the last pushed window from the scratchpad")
    group.add_argument('-focus', action='store_true', help="Move to the scratchpad container")
    return parser.parse_args()


def main(i3):

    args = parse_args()
    tree = i3.get_tree()
    focused = tree.focused_window()
    workspace = tree.current_workspace()
    scratchpad = tree.find_workspace(fn=lambda con: con.name == '_scratch')

    if args.push:

        if not focused:
            sys.exit(1)

        focused.command('move to workspace _scratch')

    elif args.pop:

        if not scratchpad:
            sys.exit(1)

        windows = list(scratchpad.windows())
        if not windows:
            sys.exit(1)

        windows[-1].command('move to workspace current, focus')

    elif args.focus:

        if workspace is scratchpad:
            i3.command('workspace back_and_forth')
        else:
            i3.command('workspace _scratch')


if __name__ == '__main__':
    with i3pie.Connection() as i3:
        main(i3)
