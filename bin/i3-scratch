#!/usr/bin/env python

import sys
import i3ipc
import argparse


def parse_args():
    parser = argparse.ArgumentParser(description="Custom i3 scratchpad")
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('-push', action='store_true', help="Push the current window to the scratchpad")
    group.add_argument('-pop', action='store_true', help="Pop the last pushed window from the scratchpad")
    group.add_argument('-focus', action='store_true', help="Move to the scratchpad container")
    return parser.parse_args()


def find_scratchpad(tree):
    for w in tree.workspaces():
        if w.name == '_scratch':
            return w


def main():

    args = parse_args()
    i3 = i3ipc.Connection()
    tree = i3.get_tree()
    focused = tree.find_focused()
    workspace = focused.workspace() if focused else None

    if args.push:

        if not focused:
            sys.exit(1)

        i3.command('move to workspace _scratch')

    elif args.pop:

        scratchpad = find_scratchpad(tree)
        if not scratchpad:
            sys.exit(1)

        windows = scratchpad.leaves()
        if not windows:
            sys.exit(1)

        windows[-1].command('move to workspace current, focus')

    elif args.focus:

        if workspace and workspace.name == '_scratch':
            i3.command('workspace back_and_forth')
        else:
            i3.command('workspace _scratch')


if __name__ == '__main__':
    main()
