#!/usr/bin/env python

import re
import os
import sys
import time
import imaplib
import pathlib
import subprocess


# When resuming the system, the network remains unreachable just after
# nm-online returns successfully. This functions tries to mitigate the problem
# using timeouts
def connect(hostname, timeout=0, interval=0.1):
    start = time.time()
    while True:
        try:
            return imaplib.IMAP4_SSL(hostname)
        except OSError as e:
            # catch OSError: [Errno 101] Network is unreachable
            if time.time() - start > timeout:
                raise
            time.sleep(interval)


def get_state(conn):
    state = {}
    _, data = conn.list()
    for line in data:
        match = re.match(r'\(.*?\) ".*" (.*)', line.decode('utf-8'))
        if not match:
            continue
        mailbox = match.group(1)
        _, status = conn.status(f'"{mailbox}"', '(UNSEEN)')
        match = re.search(r'\(UNSEEN (\d+)\)', status[0].decode('utf-8'))
        if match:
            state[mailbox] = match.group(1)
    return state


def write_state(base_path, state):
    for mailbox, unread in state.items():
        path = os.path.join(base_path, mailbox)
        try:
            try:
                with open(path, 'r') as f:
                    prev_data = f.read()
            except FileNotFoundError as e:
                prev_data = None
            if unread != prev_data:
                with open(path, 'w') as f:
                    f.write(unread)
                    pass

        except OSError as e:
            pass


def print_state(state):
    for mailbox, unread in state.items():
        print(f"{mailbox} ({unread})")


def main():

    base_path = '/run/mailcheck'

    try:
        pathlib.Path(base_path).mkdir(exist_ok=True)
    except FileExistsError as e:
        print(f"ERROR: Could not create directory {base_path}, {e}", file=sys.stderr)
        sys.exit(1)

    try:
        hostname = os.environ['FASTMAIL_HOSTNAME']
        username = os.environ['FASTMAIL_USERNAME']
        password = os.environ['FASTMAIL_PASSWORD']
    except KeyError:
        print("ERROR: Missing account info", file=sys.stderr)
        sys.exit(1)

    try:
        conn = connect(hostname, timeout=5, interval=0.5)
        conn.login(username, password)
        state = get_state(conn)
        write_state(base_path, state)
        print_state(state)
        conn.logout()
    except (imaplib.IMAP4.error, OSError) as e:
        print(f"ERROR: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == '__main__':
    main()
