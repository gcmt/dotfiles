#!/bin/bash


_notify() {
	if ! _polybar_visible && (( quiet == 0 )); then
		notify-send -t 3000 "$@"
	fi
}


_notify_err() {
	_notify -u critical "$@"
}


_polybar_visible() {
	xprop -id $(xdo id -N Polybar) | grep -q "window state: Normal"
}


_set_prop() {
	local prop=$1 value=$2
	if grep -q "^$prop=" "$state"; then
		sed -i "s:^$prop=.*:$prop=${value//:/\\:}:" "$state"
	else
		echo "$prop=$value" >> "$state"
	fi
}


_get_prop() {
	local value= prop=$1 default=${2:-0}
	value="$(grep -Po "(?<=^$prop=).*" "$state")"
	echo "${value:-$default}"
}


_main() {

	if [[ -e "$errfile" ]]; then

		if (( "$(_get_prop running)" == 1 )); then
			_notify_err "Backup Failed" "$(_get_prop archive '')"
		fi

		_set_prop running 0

		echo '%{F#ce7d86} Backup%{F-}'

	elif [[ -e "$runfile" ]]; then

		archive="$(cat "$runfile")"
		if (( "$(_get_prop running)" == 0 )); then
			_set_prop running 1
			_set_prop archive "$archive"
			_notify "Backup Started" "$archive"
		fi

		echo " Backup"

	else

		if (( "$(_get_prop running)" == 1 )); then
			_notify "Backup Finished" "$(_get_prop archive '')"
		fi

		_set_prop running 0

		echo ""

	fi

}


_handle_left_click() {

	local archive
	if [[ -e "$errfile" ]]; then
		archive="$(cat "$errfile")"
		rm -rf "$errfile"
	elif [[ -e "$runfile" ]]; then
		archive="$(cat "$runfile")"
	else
		return 1
	fi

	if [[ "$archive" =~ ^rsync\.net ]]; then
		_view_log borg-backup-rsync
	elif [[ "$archive" =~ MyPassport ]]; then
		_view_log borg-backup-hdd
	fi

}


_handle_right_click() {
	rm -rf "$errfile"
}


_view_log() {
	urxvt -title "$1 - Journalctl" -e journalctl -e -u "$1"
}


quiet=0

borgdir="/run/borg-backup"
runfile="$borgdir/running"
errfile="$borgdir/error"

statedir="$HOME/.run/polybar"
state="$statedir/borg-backup"

mkdir -p "$statedir"
touch "$state"

case "$1" in
	click-left)
		_handle_left_click
		;;
	click-right)
		_handle_right_click
		;;
	*)
		_main "$@"
		;;
esac
