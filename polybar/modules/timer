#!/bin/bash

format_time() {
	local t=$1
	local d=$(( t / 60 / 60 / 24 ))
	local h=$(( t / 60 / 60 % 24 ))
	local m=$(( t / 60 % 60 ))
	local s=$(( t % 60 ))
	local out="$(printf "%02d" $s)"
	(( m > 0 )) && out="$(printf "%02d" $m):$out"
	(( h > 0 )) && out="$h:$out"
	(( d > 0 )) && out="$d:$out"
	(( m == 0 && h == 0 && d == 0 )) && out="${out}s"
	echo "$out"
}

timer() {
	local remaining
	local end=$(( $(date +%s) + $1 ))
	while true; do
		remaining=$(( end - $(date +%s) ))
		if (( remaining > 0 )); then
			echo "%{A:$scriptpath stop:}ï‡š $(format_time $remaining)%{A}"
		else
			notify-send "Timer Finished" "Elapsed time:  $(format_time $1)"
			echo && break
		fi
		sleep 1
	done
}

main() {
	local pid
	while true; do
		if read -r cmd seconds < "$fifo"; then
			case $cmd in
				toggle)
					if [[ "$pid" ]]; then
						kill "$pid"
						echo
						pid=
					elif (( seconds > 0 )); then
						timer "$seconds" &
						pid=$!
					fi
					;;
				start)
					[[ "$pid" ]] && kill "$pid"
					if (( seconds > 0 )); then
						timer "$seconds" &
						pid=$!
					fi
					;;
				stop)
					[[ "$pid" ]] && kill "$pid"
					echo
					pid=
					;;
			esac
		fi
	done
}

err() {
	echo "$scriptname: $*" >&2
	exit 1
}

scriptpath="$(realpath -s "$0")"
scriptname="$(basename "$scriptpath")"
fifo="/tmp/polybar_timer.fifo"

if (( $# == 0 )); then
	if [[ -p "$fifo" ]]; then
		err "module already running"
	fi
	mkfifo "$fifo"
	trap "rm '$fifo'" 0
	main
else
	if [[ ! -p "$fifo" ]]; then
		err "module not running"
	fi
	echo "$1" > "$fifo"
fi
