#!/bin/bash

format_time() {
	local t=$1
	local d=$(( t / 60 / 60 / 24 ))
	local h=$(( t / 60 / 60 % 24 ))
	local m=$(( t / 60 % 60 ))
	local s=$(( t % 60 ))
	local out="$(printf "%02d" $s)"
	(( m > 0 )) && out="$(printf "%02d" $m):$out"
	(( h > 0 )) && out="$h:$out"
	(( d > 0 )) && out="$d:$out"
	(( m == 0 && h == 0 && d == 0 )) && out="${out}s"
	echo "$out"
}

timer() {
	local remaining
	local end=$(( $(date +%s) + $1 ))
	while true; do
		remaining=$(( end - $(date +%s) ))
		if (( remaining > 0 )); then
			echo "%{A:$scriptpath stop:}ï‡š $(format_time $remaining)%{A}"
		else
			echo
			notify-send -t 6000 "Timer Finished" "Elapsed time:  $(format_time $1)"
			mpv --no-loop-playlist "$sound" >/dev/null 2>&1
			break
		fi
		sleep 1
	done
}

timer_running() {
	[[ "$(ps -p "$PID_TIMER" -o comm= 2>/dev/null)" == "timer" ]]
}

start_timer() {
	if (( "$1" > 0 )); then
		stop_timer
		timer "$1" &
		PID_TIMER=$!
	fi
}

stop_timer() {
	if timer_running; then
		kill "$PID_TIMER" 2>/dev/null
		echo
		PID_TIMER=
	fi
}

main() {
	while true; do
		if read -r cmd seconds < "$fifo"; then
			case $cmd in
				toggle) timer_running && stop_timer || start_timer "$seconds" ;;
				start) start_timer "$seconds" ;;
				stop) stop_timer ;;
			esac
		fi
	done
}

err() {
	echo "$scriptname: $*" >&2
	exit 1
}

scriptpath="$(realpath -s "$0")"
scriptname="$(basename "$scriptpath")"
fifo="/tmp/polybar_timer.fifo"
sound="/usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga"

PID_TIMER=

if (( $# == 0 )); then
	if [[ -p "$fifo" ]]; then
		err "module already running"
	fi
	mkfifo "$fifo"
	trap "rm '$fifo'" 0
	main
else
	if [[ ! -p "$fifo" ]]; then
		err "module not running"
	fi
	echo "$1" > "$fifo"
fi
