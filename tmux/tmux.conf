
set -s escape-time 0
set -s focus-events on
set -s set-clipboard off

set -s default-terminal "xterm-256color"
set -sa terminal-overrides ",xterm*:Tc,st*:Tc"

set -g mouse on

set -g history-limit 10000

set -g renumber-windows on
setw -g automatic-rename on

set -g base-index 1
setw -g pane-base-index 1

set -g set-titles on
set -g set-titles-string '#S - Tmux'

set -g visual-bell off
set -g visual-activity off
setw -g monitor-activity off

setw -g display-panes-colour colour22
setw -g display-panes-active-colour red

setw -g mode-fg colour21
setw -g mode-bg colour22

set -g message-fg colour21
set -g message-bg colour22
set -g message-command-fg colour21
set -g message-command-bg colour22

set -g pane-border-fg colour22
set -g pane-active-border-fg colour22

set -g status off
set -g status-interval 2
set -g status-position bottom
set -g status-justify left
set -g status-fg colour22
set -g status-bg colour21

set -g status-left-length 40
set -g status-left " #S #[bg=colour19] "

set -g status-right-length 40
set -g status-right "#{?client_prefix,#[bg=colour19] #[bg=default] C-x ,}#[bg=colour19] #[bg=default] #(whoami)@#H #[bg=colour19] #[bg=default] %a %d %H:%M "

setw -g window-status-format "#[bg=default] #I #W#{?window_zoomed_flag, [z],} #[bg=colour19] "
setw -g window-status-current-format "#[bg=colour22]#[fg=colour19] #I #W#{?window_zoomed_flag, [z],} #[bg=colour19] "
setw -g window-status-activity-style "fg=red"
setw -g window-status-separator ""

set -g prefix C-x

unbind C-b
bind C-x send-prefix

setw -g mode-keys vi
setw -g status-keys emacs

# vi-like copy mode
bind -n M-Escape copy-mode
bind BSpace copy-mode -eu
bind -T copy-mode-vi q send -X cancel
bind -T copy-mode-vi C-c send -X clear-selection
bind -T copy-mode-vi Escape send -X clear-selection
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection \; display ' copied'
bind -T copy-mode-vi a send -X append-selection \; display ' appended'
bind -T copy-mode-vi + send -X copy-pipe 'xclip -sel clip' \; display ' copied to system clipboard'
bind -T copy-mode-vi C-o send -X copy-pipe-and-cancel 'read url; firefox -new-tab "$url"; i3-msg [class="Firefox"] focus'
bind -T copy-mode-vi J send -X -N 3 cursor-down
bind -T copy-mode-vi K send -X -N 3 cursor-up
bind -T copy-mode-vi BSpace send -X page-up
bind -T copy-mode-vi Enter send -X page-down
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
bind -T copy-mode-vi C-f command-prompt -p "search-forward:" "send -X search-forward \"%%%\""
bind -T copy-mode-vi C-b command-prompt -p "search-backward:" "send -X search-backward \"%%%\""

# don't exit copy mode when mouse is released
unbind -T copy-mode-vi MouseDragEnd1Pane

# choose buffer to copy to system clipboard
bind + choose-buffer "run -b 'tmux save-buffer -b %1 - | xclip -sel clip' \; display ' %1 copied to system clipboard'"

# detach client
bind d confirm-before -p " detach-client? (y/n)" detach-client

# kill pane(s)
bind c confirm-before -p " kill-pane? (y/n)" kill-pane
bind C confirm-before -p " kill-pane -a? (y/n)" "kill-pane -a"

# create new window
bind w new-window -c "#{pane_current_path}"
# create new window (if a name is given then a named window is created)
bind W command-prompt -p " new-window:" "if -F '%1' 'new-window -n \"%1\" -c \"#{pane_current_path}\"' 'new-window -c \"#{pane_current_path}\"'"

# rename window
bind , command-prompt -p " rename-window:" -I "#W" "rename-window '%%'"

# activate automatic window renaming
bind \; setw automatic-rename on

# kill window(s)
bind q confirm-before -p " kill-window? (y/n)" kill-window
bind Q confirm-before -p " kill-window -a? (y/n)" "kill-window -a"

# go to the last visited window
bind a last-window

# rotate windows
bind O rotate-window -U

# split window using the current path
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 2

# pane navigation
bind h select-pane -L
bind j select-pane -D
bind l select-pane -R
bind k select-pane -U
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-l select-pane -R
bind -n M-k select-pane -U

# window navigation
bind -r p select-window -t :- \; display " ###I #W"
bind -r n select-window -t :+ \; display " ###I #W"

# move windows
bind -r P swap-window -t -1
bind -r N swap-window -t +1

# when moving to a window, create it if it does not exist
bind 1 if "tmux selectw -t :=1" "" "neww -t 1 -c '#{pane_current_path}'"
bind 2 if "tmux selectw -t :=2" "" "neww -t 2 -c '#{pane_current_path}'"
bind 3 if "tmux selectw -t :=3" "" "neww -t 3 -c '#{pane_current_path}'"
bind 4 if "tmux selectw -t :=4" "" "neww -t 4 -c '#{pane_current_path}'"
bind 5 if "tmux selectw -t :=5" "" "neww -t 5 -c '#{pane_current_path}'"
bind 6 if "tmux selectw -t :=6" "" "neww -t 6 -c '#{pane_current_path}'"
bind 7 if "tmux selectw -t :=7" "" "neww -t 7 -c '#{pane_current_path}'"
bind 8 if "tmux selectw -t :=8" "" "neww -t 8 -c '#{pane_current_path}'"
bind 9 if "tmux selectw -t :=9" "" "neww -t 9 -c '#{pane_current_path}'"

# choose windows or sessions interactively
bind t choose-tree -Zs -f '#{!=:#S,cmus}'
bind T choose-tree -Zw -f '#{!=:#S,cmus}'

# choose windows of the current session only
bind Tab run "tmux choose-tree -Zw -f '##{==:##S,#S}'"

# choose windows with rofi
bind -n M-Tab run "tmux-choose-window -h"

# display pane numbers
bind '#' display-panes -d 0

# toggle status bar
bind b set -g status

# reload config file
bind r source-file ~/.tmux.conf \; display " config reloaded!"
