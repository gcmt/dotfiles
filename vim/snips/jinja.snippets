priority -50

extends html

snippet block "block" b
{% block ${1:name} %}
	$2
{% endblock %}
endsnippet

snippet blocki "inline block" w
{% block $1 %}$2{% endblock %}
endsnippet

snippet raw "escaped block" b
{% raw %}
	$1
{% endraw %}
endsnippet

snippet extends "extends" b
{% extends "$1" %}
endsnippet

snippet include "include" b
{% include "$1" %}
endsnippet

snippet import "import" b
{% import "$1" %}
endsnippet

snippet from "from/import/as" b
{% from "${1:template}" import ${2:name} %}
endsnippet

snippet filter "filter" b
{% filter $1 %}
	$2
{% endfilter %}
endsnippet

snippet for "for" b
{% for $1 in $2 %}
	$3
{% endfor %}
endsnippet

snippet forelse "for/else" b
{% for $1 in $2 %}
	$3
{% else %}
	$4
{% endfor %}
endsnippet

snippet if "if" b
{% if ${1} %}
	$2
{% endif %}
endsnippet

snippet ifelse "if/else" b
{% if ${1} %}
	$2
{% else %}
	$3
{% endif %}
endsnippet

snippet ifee "if/elif/else" b
{% if ${1} %}
	$2
{% elif %}
	$3
{% else %}
	$4
{% endif %}
endsnippet

snippet else "else" b
{% else %}
	$1
endsnippet

snippet macro "macro" b
{% macro ${1:foo}(${2}) %}
	$3
{% endmacro %}
endsnippet

snippet call "call" b
{% call ${1:name}(${2:args}) %}
	$3
{% endcall %}
endsnippet

snippet set "set" b
{% set ${1:name} = ${2:'value'} %}
endsnippet

snippet trans "translation" b
{% trans %}
	$1
{% endtrans %}
endsnippet

snippet with "with" b
{% with %}
	$1
{% endwith %}
endsnippet

snippet autoescape "autoescape" b
{% autoescape ${1:true} %}
	$2
{% endautoescape %}
endsnippet

# Filters
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

snippet batch "batch items" w
batch(linecount=$1, fill_with=${2:None})
endsnippet

snippet dictsort "sort and yield (key, value) pairs" w
dictsort(case_sensitive=${1:False}, by=${2:'key'})
endsnippet

snippet round "round number" w
round(precision=${1:0}, method=${2:'common|ceil|floor'})
endsnippet

snippet urlize "convert plain-text url to <a/>" w
urlize(trim_url_limit=${1:None}, nofollow=${2:False})
endsnippet

snippet wordwrap "wordwrap" w
wordwrap(width=${1:79}, break_long_words=${2:True})
endsnippet

snippet truncate "truncate" w
truncate(lenght=${1:79}, killwords=${2:False}, end=${3:'...''})
endsnippet

snippet sum "sum of sequence of numbers + start" w
sum(attribute=${1:None}, start=${2:0})
endsnippet

snippet sort "sort an iterable" w
sort(reverse=${1:False}, case_sensitive=${2:False}, attribute=${3:None})
endsnippet

snippet indent "indent" w
indent(width=${1:4}, indentfirst=${2:False})
endsnippet

# Flask
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

snippet html5-jinja "Jinja Html5 Template"
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>App - {% block title %}{% endblock %}</title>
	<link rel="shortcut icon" href="{{ static('favicon.ico') }}">
	<link rel="stylesheet" href="{{ static('styles/main.css') }}">
</head>
<body>
	{% block body %}{% endblock %}
	<script src="{{ static('js/main.js') }}"></script>
</body>
</html>
endsnippet

snippet uf "url_for('..', filename='..')"
url_for('$1', filename='$2')
endsnippet

# vim:ft=snippets:
